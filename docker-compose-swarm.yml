version: '3.8'

services:
  traefik:
    image: traefik:v2.9
    command:
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - aseds

  frontend:
    ports:
      - "3000:80"
    image: zoulatizakaria30/frontend:1.0.0
    networks:
      - aseds
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.5" 
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s 
        max_attempts: 3
        window: 60s
      labels:
        - "traefik.http.routers.frontend.rule=Host(`frontend.localhost`)"
        - "traefik.http.services.frontend.loadbalancer.server.port=80"

  backend:
    image: zoulatizakaria30/backend:1.0.0
    ports:
      - "9001:8080"
    env_file:
      - .env
    networks:
      - aseds
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
      restart_policy:
        condition: on-failure 
        delay: 5s 
        max_attempts: 3
        window: 60s
      labels:
        - "traefik.http.routers.backend.rule=Host(`backend.localhost`)"
        - "traefik.http.services.backend.loadbalancer.server.port=8080"

  database:
    image: postgres:latest
    env_file:
      - .env
    networks:
      - aseds
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1.0"
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 10s 
        max_attempts: 5
        window: 120s

networks:
  aseds :
    driver: overlay

